######################################################################
#
#       Copyright (C) 2001-2002 Nathan Fiedler
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# PROJECT:      JSwat
# MODULE:       Breakpoints
# FILE:         Bundle.properties
#
# AUTHOR:       Nathan Fiedler
#
# REVISION HISTORY:
#       Name    Date            Description
#       ----    ----            -----------
#       nf      06/03/01        Initial version
#
# DESCRIPTION:
#       Resources for this package.
#
# $Id$
#
######################################################################

ambiguousClass = Class specification matches more than one class.

ambiguousMethod = Method is overloaded; please specify arguments.

breakpointHit = Hit breakpoint

brkOnlyInClass = Breakpoints cannot be set in interfaces or arrays.

classPrepared = Class prepared:
classUnloaded = Class unloaded:

conditionSatisFailed = Condition isSatisfied() failed:

condition.notBoolean = Condition expression must be a boolean.

error.breakpointNoClass = Breakpoint {0} had no 'class'
error.conditionNoClass = Condition {0} had no 'class'
error.monitorNoClass = Monitor {0} had no 'class'
error.readBreakpoint = Failed to read breakpoint {0}
error.readBreakpointGroup = Failed to read breakpoint group {0}
error.readCondition = Failed to read condition {0}
error.readMonitor = Failed to read monitor {0}
error.writeBreakpoint = Failed to save breakpoint {0}
error.writeBreakpointGroup = Failed to save breakpoint group {0}

exceptionThrown = Exception thrown:

invalidSyntax = Invalid breakpoint syntax.

invalidArgumentType = Invalid argument type:

missingClassName = No class name given.
# Space between parens because JLabel uses bold font
missingMethodName = Missing method name before ( ).
missingMethodArgs = Missing method arguments; need ( ).

noCodeAtLine = No code at that line in the class.

# User requested information where there was none.
noLineNumberInfo = There is no line number information for this class.

noRemoveDefault = Cannot remove default group.

noSuchMethod = No matching method found in the class.

noSuchThreadFilter = Filter not applied - no thread by the identifier:

# Breakpoints show this to indicate which threads will be suspended
# when the breakpoint is hit.
suspendAll = (suspend all threads)
suspendNone = (suspend no threads)
suspendThread = (suspend event thread)

unknownError = Unexpected error:

threadStarted = Thread started:
threadDied = Thread died:

traceEntered = entered
traceExited = exited

Watch.accessed = Variable accessed (field, object, value):
Watch.classNotLoaded = Class is not yet prepared in debuggee.
Watch.fieldNotObject = Referenced field is not an object.
Watch.invalidFrame = Invalid stack frame.
Watch.modified = Variable modified (field, object, value to be):
Watch.nativeMethod = Method is native.
Watch.noCurrentThread = Current thread not set.
Watch.noFrame = No stack frame for this thread.
Watch.noVariableInfo = There is no variable information for this class.
Watch.objectCollected = Referenced object was garbage collected.
Watch.threadNotSuspended = Thread must be suspended.
Watch.undefinedField = Field by that name is not defined.
Watch.variableNotField = The variable must be a field, not a local variable.
Watch.noInstanceFilterSupport = VM does not have instance filter support.

######################################################################
#               Breakpoint manager resources.
######################################################################
BreakManager.deserializeFailed = Failed to read breakpoints data.
BreakManager.failedResolve = Failed breakpoint resolution:
