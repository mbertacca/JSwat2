######################################################################
#
#       Copyright (C) 2002-2005 Nathan Fiedler
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# $Id$
#
######################################################################


header.1 = Please choose a category or command shown below:

footer.1 = Type 'u' to go up a level, 'm' to redisplay the menu, 'q' to exit.

#
# TRANSLATOR: Only change the <category>... strings in this group.
#
top.subs = breakpoints threads objects commands classes \
           variables path stepping stack vm trace session misc
top.1 = (1) breakpoints...           (8) stepping...
top.2 = (2) threads...               (9) stack...
top.3 = (3) objects...              (10) vm...
top.4 = (4) commands...             (11) trace...
top.5 = (5) classes...              (12) session...
top.6 = (6) variables...            (13) misc...
top.7 = (7) path...

#
# TRANSLATOR: everything below this line must remain unchanged.
#
top.breakpoints.subs = _brkinfo _brkmon _catch _classbrk _clear \
                        _condition _disable _enable _filter _runto \
                        _stop _threadbrk
top.breakpoints.1 = (1) brkinfo           (7) disable
top.breakpoints.2 = (2) brkmon            (8) enable
top.breakpoints.3 = (3) catch             (9) filter
top.breakpoints.4 = (4) classbrk         (10) runto
top.breakpoints.5 = (5) clear            (11) stop
top.breakpoints.6 = (6) condition        (12) threadbrk

top.threads.subs = _interrupt _kill _resume _suspend _thread _threadbrk \
                   _threadgroups _threadlocks _threads
top.threads.1 = (1) interrupt           (6) threadbrk
top.threads.2 = (2) kill                (7) threadgroups
top.threads.3 = (3) resume              (8) threadlocks
top.threads.4 = (4) suspend             (9) threads
top.threads.5 = (5) thread

top.objects.subs = _dump _disablegc _elements _enablegc _invoke _locks _print
top.objects.1 = (1) dump                (5) invoke
top.objects.2 = (2) disablegc           (6) locks
top.objects.3 = (3) elements            (7) print
top.objects.4 = (4) enablegc

top.commands.subs = _alias _apropos _help _history _read _unalias
top.commands.1 = The following are special command invocation options:
top.commands.2 = \t!!\t\twill execute the most recent command.
top.commands.3 = \t!<prefix>\twill execute the most recent matching command.
top.commands.4 = \t<n> <command>\twill run the command 'n' times.
top.commands.5 = \t
top.commands.6 = (1) alias              (4) history
top.commands.7 = (2) apropos            (5) read
top.commands.8 = (3) help               (6) unalias

top.classes.subs = _bytecodes _class _classbrk _classes _fields \
                   _invoke _lines _methods _source _view
top.classes.1 = (1) bytecodes           (6) invoke
top.classes.2 = (2) class               (7) lines
top.classes.3 = (3) classbrk            (8) methods
top.classes.4 = (4) classes             (9) source
top.classes.5 = (5) fields              (10) view

top.variables.subs = _fields _elements _locals _set
top.variables.1 = (1) fields            (3) locals
top.variables.2 = (2) elements          (4) set

top.path.subs = _classpath _sourcepath
top.path.1 = (1) classpath              (2) sourcepath

top.stepping.subs = _exclude _list _next _nexti _step _stepi
top.stepping.1 = (1) exclude            (4) nexti
top.stepping.2 = (2) list               (5) step
top.stepping.3 = (3) next               (6) stepi

top.stack.subs = _down _frame _up _where _wherei
top.stack.1 = (1) down          (4) where
top.stack.2 = (2) frame         (5) wherei
top.stack.3 = (3) up

top.vm.subs = _attach _close _kill _listen _load _resume _run _suspend
top.vm.1 = (1) attach           (5) load
top.vm.2 = (2) close            (6) resume
top.vm.3 = (3) kill             (7) run
top.vm.4 = (4) listen           (8) suspend

top.trace.subs = _trace
top.trace.1 = (1) trace

top.session.subs = _copysession _loadsession _rmsession
top.session.1 = (1) copysession
top.session.2 = (2) loadsession
top.session.3 = (3) rmsession

top.misc.subs = _about _exit _logging _monitor _options _props _refresh \
                _stderr _stdin _stdout _unmonitor _version
top.misc.1 = (1) about           (7) refresh
top.misc.2 = (2) exit            (8) stderr
top.misc.3 = (3) logging         (9) stdin
top.misc.4 = (4) monitor        (10) stdout
top.misc.5 = (5) options        (11) unmonitor
top.misc.6 = (6) props          (12) version
