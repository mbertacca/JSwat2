######################################################################
#
#       Copyright (C) 2001-2004 Nathan Fiedler
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#
# $Id$
#
######################################################################

# Please do not localize these.
about1 = Copyright (C) 1999-2005 Nathan Fiedler
about2 = See the LICENSE.txt for your warranty.
about3 = http://www.bluemarsh.com/java/jswat/

noVMConnectors = No virtual machine connectors found.
noShmemVMsFound = No running VMs with transport 'dt_shmem' found.
noSocketVMsFound = No running VMs with transport 'dt_socket' found.
vmLoading = VM loading with following options, class name, and class arguments.
vmLoadFailed = VM load failed.

missingJPDA = JSwat is unable to find the required JPDA library.\n\
See README.html file for instructions on running JSwat.

#
# Special messages.
#
upgrade2xTitle = Upgrading to 2.x
upgrade2xFile = resources/upgrade20.html
helpIndex = resources/help_index.html
gettingHelp = resources/getting-help.html
reportBug = resources/reporting-bugs.html

######################################################################
#               VMConnection resources
######################################################################

# Launching the VM failed for some reason.
VMConn.causeOfDeath = Cause of death:
# This is a guess as to the launch failure.
VMConn.checkClassExists = Check that debuggee class exists.
# Displayed when exception occurs reading output from debuggee VM.
VMConn.errorReadingOutput = Unable to display process output

######################################################################
#               Session resources
######################################################################

Session.couldntMapSrcFile = Source for class not found. Check sourcepath.
Session.mgrClassNotFound = Manager class not found: {0}
Session.showFileError = Error showing file:
Session.vmAttached = Attached to remote VM
Session.vmClosed = VM closed
Session.vmDetached = Detached from remote VM
Session.vmDisconnected = Disconnected from debuggee VM
Session.vmLoaded = VM loaded
Session.vmRunning = VM running
Session.vmSuspended = VM suspended


######################################################################
#               MonitorManager Resources
######################################################################

Monitor.errorNoClass = Monitor {0} had no 'class'
Monitor.errorRead = Failed to read monitor: {0}


######################################################################
#               Startup Managers
######################################################################

# List of managers to be loaded at startup.
startupManagers = com.bluemarsh.jswat.breakpoint.BreakpointManager \
                  com.bluemarsh.jswat.MonitorManager

# Displayed when path manager loaded class with bad byte codes.
PathManager.badbytes = Class contained invalid byte codes:
# Displayed when path manager encounters IOException reading .class file.
PathManager.ioExc = I/O exception:
